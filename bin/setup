#!/usr/bin/env ruby

require 'bundler/inline'

gemfile do
  source 'https://rubygems.org'
  require 'fileutils'
  require 'colorize'
end

# path to your application root.
APP_ROOT = File.expand_path("..", __dir__)

# Execute a shell command and raise an error if it fails.
def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

# Check if a command exists
def command?(name)
  [name,
   *ENV['PATH'].split(File::PATH_SEPARATOR).map {|p| File.join(p, name)}
  ].find {|f| File.executable?(f)}
end

FileUtils.chdir APP_ROOT do
  # This script is a way to set up or update your development environment automatically.
  # This script is idempotent, so that you can run it at any time and get an expectable outcome.
  # Add necessary setup steps to this file.
  
  unless File.exist?(".env")
    puts "\n== Copying env.sample files =="
    FileUtils.cp ".env.sample", ".env"
    puts "Copied .env.sample to .env".green
  end

  puts "\n== Installing gems =="
  system! "gem install bundler --conservative"
  system("bundle check") || system!("bundle install")
  puts "Gems installed".green

  puts "\n== Installing packages using Bun =="
  if command?("bun")
    system!("bun install")
    puts "Packages installed".green
  else
    puts "Bun is not installed. Install bun using `brew install oven-sh/bun/bun`".red
    puts "Visit https://bun.sh/docs/installation for more information.".red
    exit 1
  end

  puts "\n== Preparing database =="
  if File.exist?("config/database.yml")
    system! "bin/rails db:prepare"
    puts "Database setup complete".green
  else
    puts "config/database.yml not found".red
    exit 1
  end

  if !Dir.exist?("tmp/pids")
    puts "\n== Creating tmp/pids directory =="
    system!("bin/rails tmp:create")
    puts "tmp/pids directory created".green
  end
 
  puts "\n== Removing old logs and tempfiles =="
  system! "bin/rails log:clear tmp:clear"
  puts "Old logs and tempfiles removed".green

  puts ""
  puts "You're set! Now you can run bin/dev to boot your server and access your application.".green
end
